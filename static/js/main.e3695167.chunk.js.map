{"version":3,"sources":["components/statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","components/feedback/Feedback.js","components/App.js","index.js"],"names":["Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","onLeaveFeedback","name","type","value","onClick","Section","title","children","Notification","messeage","Feedback","state","handleChange","option","setState","countTotalFeedback","countPositiveFeedbackPercentage","positiveFeedbackPercentage","Number","this","Component","defaultProps","App","ReactDOM","render","document","getElementById"],"mappings":"2NAsBeA,EAnBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,oCACE,oCAAUJ,GACV,uCAAaC,GACb,mCAASC,GAET,qCAAWC,KACX,iDAAuBC,IAAvB,OCkCWC,EAzCS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAC1BP,EAAuBM,EAAvBN,KAAMC,EAAiBK,EAAjBL,QAASC,EAAQI,EAARJ,IACvB,OACE,oCACE,4BACEM,KAAK,OACLC,KAAK,SACLC,MAAOV,EACPW,QAAS,kBAAMJ,EAAgB,UAJjC,QAQA,4BACEC,KAAK,UACLC,KAAK,SACLC,MAAOT,EACPU,QAAS,kBAAMJ,EAAgB,aAJjC,WAQA,4BACEC,KAAK,MACLC,KAAK,SACLC,MAAOR,EACPS,QAAS,kBAAMJ,EAAgB,SAJjC,SCRSK,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,iCACE,4BAAKD,GACJC,ICGUC,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAAkB,4BAAKA,ICGvBC,E,4MAKnBC,MAAQ,CACNlB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPiB,aAAe,SAAAC,GACb,EAAKC,UAAS,SAAAH,GAAK,sBAChBE,EAASF,EAAME,GAAU,O,EAI9BE,mBAAqB,WAEnB,OADc,EAAKJ,MAAMlB,KAAO,EAAKkB,MAAMjB,QAAU,EAAKiB,MAAMhB,K,EAIlEqB,gCAAkC,WAChC,IAAMC,EACe,IAAlB,EAAKN,MAAMlB,MACX,EAAKkB,MAAMlB,KAAO,EAAKkB,MAAMjB,QAAU,EAAKiB,MAAMhB,KACrD,OAAOuB,OAAOD,I,uDAId,OACE,oCACE,kBAAC,EAAD,CAASX,MAAM,yBACb,kBAAC,EAAD,CACEP,QAASoB,KAAKR,MACdX,gBAAiBmB,KAAKP,gBAGzBO,KAAKJ,qBAAuB,EAC3B,kBAAC,EAAD,CAAST,MAAM,cACb,kBAAC,EAAD,CACEb,KAAM0B,KAAKR,MAAMlB,KACjBC,QAASyB,KAAKR,MAAMjB,QACpBC,IAAKwB,KAAKR,MAAMhB,IAChBC,MAAOuB,KAAKJ,mBACZlB,mBAAoBsB,KAAKH,mCAI7B,kBAAC,EAAD,CAAcP,SAAS,2B,GAjDKW,aAAjBV,EACZW,aAAe,GCITC,MARf,WACE,OACE,oCACE,kBAAC,EAAD,QCFNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.e3695167.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <>\r\n    <p>Good: {good}</p>\r\n    <p>Neutral: {neutral}</p>\r\n    <p>Bad: {bad}</p>\r\n\r\n    <p>Total: {total()}</p>\r\n    <p>Positive feedback: {positivePercentage()}%</p>\r\n  </>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.func.isRequired,\r\n  positivePercentage: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  const { good, neutral, bad } = options;\r\n  return (\r\n    <>\r\n      <button\r\n        name=\"good\"\r\n        type=\"button\"\r\n        value={good}\r\n        onClick={() => onLeaveFeedback('good')}\r\n      >\r\n        Good\r\n      </button>\r\n      <button\r\n        name=\"neutral\"\r\n        type=\"button\"\r\n        value={neutral}\r\n        onClick={() => onLeaveFeedback('neutral')}\r\n      >\r\n        Neutral\r\n      </button>\r\n      <button\r\n        name=\"bad\"\r\n        type=\"button\"\r\n        value={bad}\r\n        onClick={() => onLeaveFeedback('bad')}\r\n      >\r\n        Bad\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.shape({\r\n    good: PropTypes.number,\r\n    neutral: PropTypes.number,\r\n    bad: PropTypes.number,\r\n  }).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section>\r\n    <h2>{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ messeage }) => <h2>{messeage}</h2>;\r\n\r\nNotification.propTypes = {\r\n  messeage: PropTypes.string,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from 'react';\r\nimport Statistics from '../statistics/Statistics';\r\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions';\r\nimport Section from '../Section/Section';\r\nimport Notification from '../Notification/Notification';\r\n\r\nexport default class Feedback extends Component {\r\n  static defaultProps = {};\r\n\r\n  static propTypes = {};\r\n\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  handleChange = option => {\r\n    this.setState(state => ({\r\n      [option]: state[option] + 1,\r\n    }));\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    const total = this.state.good + this.state.neutral + this.state.bad;\r\n    return total;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    const positiveFeedbackPercentage =\r\n      (this.state.good * 100) /\r\n      (this.state.good + this.state.neutral + this.state.bad);\r\n    return Number(positiveFeedbackPercentage);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            options={this.state}\r\n            onLeaveFeedback={this.handleChange}\r\n          />\r\n        </Section>\r\n        {this.countTotalFeedback() > 0 ? (\r\n          <Section title=\"Statistics\">\r\n            <Statistics\r\n              good={this.state.good}\r\n              neutral={this.state.neutral}\r\n              bad={this.state.bad}\r\n              total={this.countTotalFeedback}\r\n              positivePercentage={this.countPositiveFeedbackPercentage}\r\n            />\r\n          </Section>\r\n        ) : (\r\n          <Notification messeage=\"No feedback given\" />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport Feedback from './feedback/Feedback';\n\nfunction App() {\n  return (\n    <>\n      <Feedback />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}